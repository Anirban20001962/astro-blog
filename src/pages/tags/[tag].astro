---
import { MarkdownInstance } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { PostLayout } from "../../utils/markdowntype";
import BlogPost from "../../components/BlogPost.astro";

type Props = {
    filteredPosts: MarkdownInstance<PostLayout>[]
}

export async function getStaticPaths() {
    const allPosts: MarkdownInstance<PostLayout>[] = 
        await Astro.glob("../posts/*.md");

    const uniqueTags = 
        [...new Set(allPosts.map(map => map.frontmatter.tags).flat())]

    return uniqueTags.map((tag) => {
        const filteredPosts = 
            allPosts.filter((post) => post.frontmatter.tags.includes(tag));

        return {
            params: {tag}, 
            props: {filteredPosts}
        }
    })
}

const {tag} = Astro.params;
const {filteredPosts} = Astro.props;

---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        {filteredPosts.map(
            (post) => 
            <BlogPost 
                title={post.frontmatter.title} 
                url={post.url}
            />
        )}
    </ul>
</BaseLayout>